import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns

data = pd.read_csv('C:/Users/pravjha/Desktop/EbAgnos/ml-practice/Advertising_data.csv')
data.info()
sns.pairplot(data)
sns.heatmap(data.corr())



X = data.iloc[:,[2,3]].values
y = data.iloc[:,4].values

data.head()

from sklearn.model_selection import train_test_split

X_train,X_test,y_train, y_test = train_test_split(X,y,test_size=0.25,random_state =5)

from sklearn.preprocessing import StandardScaler
sc=StandardScaler()
X_train =sc.fit_transform(X_train)
X_test =sc.transform(X_test)


from sklearn.svm import SVC

cls = SVC(kernel ='linear',random_state=0)
cls.fit(X_train, y_train)

y_pred = cls.predict(X_test)

from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_test,y_pred)

from sklearn.metrics import accuracy_score
accuracy =accuracy_score(y_test,y_pred)

plt.show()


from sklearn.model_selection import GridSearchCV

parameters = [{'C': [1, 10, 100, 1000], 'kernel': ['linear']},
              {'C': [1, 10, 100, 1000], 'kernel': ['rbf'], 'gamma': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]}]
grid_search = GridSearchCV( estimator = cls ,
                            param_grid = parameters,
                            cv=10,
                            n_jobs = -1 )

grid_search = grid_search.fit(X_train, y_train)

print('accuracy = grid_search.best_score_', grid_search.best_score_)

print('grid_search.best_params_',grid_search.best_params_ )




cls_grid = SVC(C=10,kernel='rbf',gamma=0.3)
cls_grid.fit(X_train, y_train)
y_pred = cls_grid.predict(X_test)

cm = confusion_matrix(y_test,y_pred)


accuracy_grid =accuracy_score(y_test,y_pred)

print( accuracy_grid)
