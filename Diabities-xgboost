import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

data = pd.read_csv('C:/Users/pravjha/Desktop/EbAgnos/pima-data.csv')

data.shape

print(data.head(10))

print(data.isnull().values.any())

label = data["diabetes"]

features = data.drop(["diabetes"],axis=1)

from sklearn.model_selection import train_test_split

x_train, x_test,y_train,y_test = train_test_split( features,label, test_size =0.30 , random_state=10)

from sklearn.preprocessing import Imputer

fill_values = Imputer( missing_values=0, strategy='mean',axis=0)

x_train = fill_values.fit_transform(x_train)
x_test = fill_values.fit_transform(x_test)


params={
 "learning_rate"    : [0.05, 0.10, 0.15, 0.20, 0.25, 0.30 ] ,
 "max_depth"        : [ 3, 4, 5, 6, 8, 10, 12, 15],
 "min_child_weight" : [ 1, 3, 5, 7 ],
 "gamma"            : [ 0.0, 0.1, 0.2 , 0.3, 0.4 ],
 "colsample_bytree" : [ 0.3, 0.4, 0.5 , 0.7 ]
    
}

from sklearn.model_selection import RandomizedSearchCV
import xgboost
classifier=xgboost.XGBClassifier()
random_search=RandomizedSearchCV(classifier,param_distributions=params,n_iter=5,scoring='roc_auc',n_jobs=-1,cv=5,verbose=3)
def timer(start_time=None):
    if not start_time:
        start_time = datetime.now()
        return start_time
    elif start_time:
        thour, temp_sec = divmod((datetime.now() - start_time).total_seconds(), 3600)
        tmin, tsec = divmod(temp_sec, 60)
        print('\n Time taken: %i hours %i minutes and %s seconds.' % (thour, tmin, round(tsec, 2)))

from datetime import datetime
# Here we go
start_time = timer(None) # timing starts from this point for "start_time" variable
random_search.fit(x_train,y_train.ravel())
timer(start_time) # timing ends here for "start_time" variable

print( 'random_search.best_estimator_' , random_search.best_estimator_)


print( 'random_search.best_params_' , random_search.best_params_)

from sklearn.model_selection import cross_val_score

score=cross_val_score(classifier,x_train,y_train.ravel(),cv=10)

print(score)

print('score_mean',score.mean())

